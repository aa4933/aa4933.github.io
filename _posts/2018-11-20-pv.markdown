---
layout:     post
title:      "PV与QPS，500W的PV小战役"
subtitle:   "hook"
date:       2018-10-31 15:28:00
author:     "wuilly"
header-img: "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1516777063737&di=a86a9881000f70190aaffe6953eec4f3&imgtype=0&src=http%3A%2F%2Fimg.article.pchome.net%2F00%2F28%2F07%2F58%2Fpic_lib%2Fwm%2F1920_1200car_1002.jpg"
tags:
    - PHP
---
> 'About PHP'

### 关于pv与QPS

> 概念性的东西其实没什么好说的，pv就是点一下算一次，uv是一个用户点一下算一次，点两下也算一次，qps则是代表一秒钟能承受的处理的请求数

### 关于统计分析

> 我找了很多相关的网站，都是治标不治本，就只是说明了pv与qps的理论概念，没有特别的衍生统计方案

> 所以我想着重说一下我的衍生统计方案


### 关于app

> 现在大部分的统计数据其实都是app与接口的形式，哪怕是web app也是同理

> 所以我们需要一个很关键的统计分析数据平台，可以自己写，也可以用第三方的

> 比如腾讯的mta

### 我的统计方法

> 备注：虽然不准确，但是只多不会少

![image](https://ws3.sinaimg.cn/large/005N5norgy1fxem212hkjj316b098mxk.jpg)

![image](https://ws2.sinaimg.cn/large/005N5norgy1fxem38io9hj30aq05hq2y.jpg)

```
我先是找到了人均访问数量，然后再根据每日活跃用户数量求单天的pv数量

理论上讲，这个数据是准确的，但是我并没有在腾讯的mta里面找到直接给出pv的数据，只有单个页面的最多数据，单个页面的最多数据也是不准确的，所以秉着按多了算的原则，我用统计的方法计算出的数量大约是
```

> pv总数560w左右的数量

### 计算qps的理论

> 网上流传比较广的是8/2原则，就是指80%的访问量，会在20%的时间里面被释放

```
所以大部分的计算方法是

560w * 0.8 / 0.2 / 86400 = 260 左右的qps
```

### 后记

> 所以也是挺感慨的，系统在我手里也算是走了好几圈了，终于挺住了500w的pv，这个是很值得开心的一件事情，虽然在2011年算比较多的流量，但是放在2018年，却有点贫瘠了，以后也许有机会接触千万级别的，才能明白更多的事情吧

> 关于优化，其实在这个级别上，索引，连接查询已经是必不可少的了，
因为如果你一旦不使用这些优化，你的系统立刻马上就会崩坏掉，我以前也吃过索引的亏，
删掉了一个索引，系统坏了2小时，还有连接查询，经常导致20%的时间段出现异常

> 关于后续的优化手段，其实后续我认为分库分表，剥离查询与增删改，以及负载均衡是比较好的优化手段，后续就知道了